plugins {
	id 'java'
	id 'war'
	id 'groovy'
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.polidoraian'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// TOMCAT EMBED
	implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
	compileOnly "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"

	// DATABASE
	runtimeOnly "com.mysql:mysql-connector-j:${mySqlVersion}"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"

	// DEV TOOLS
	developmentOnly "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
	implementation "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"

	// UTILITIES
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	implementation "org.apache.commons:commons-lang3:${apacheCommonsLang3Version}"
	implementation "org.apache.commons:commons-collections4:${apacheCollectionsVersion}"

	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	compileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	// MAPS
	implementation "com.google.maps:google-maps-services:${googleMapsVersion}"

	// SECURITY
	implementation "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"
	testImplementation "org.springframework.security:spring-security-test:${springBootVersion}"
	implementation "org.springframework.boot:spring-boot-starter-validation:${springBootVersion}"
	implementation "jakarta.validation:jakarta.validation-api:${jakartaValidationVersion}"


	// TESTING
	testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
	testImplementation "org.spockframework:spock-core:${spockVersion}"
	testImplementation "org.apache.groovy:groovy-all:${groovyVersion}"
	testImplementation "net.bytebuddy:byte-buddy:${byteBuddyVersion}"

	// THYMELEAF
	implementation "org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}"
	implementation "org.thymeleaf.extras:thymeleaf-extras-springsecurity6:${thymeleafSecurityVersion}"

	providedRuntime "org.springframework.boot:spring-boot-starter-tomcat:${springBootVersion}"
}

tasks.named('test') {
	useJUnitPlatform()
}
